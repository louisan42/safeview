name: ETL

on:
  schedule:
    - cron: '30 5 * * *' # daily at 05:30 UTC
  push:
    paths:
      - 'etl/**'
      - '.github/workflows/etl.yml'
  workflow_dispatch:
    inputs:
      window_days:
        description: 'Incidents window (days)'
        required: false
        default: '7'
      backfill:
        description: 'Backfill mode (true/false)'
        required: false
        default: 'false'
      backfill_start:
        description: 'Backfill start date (YYYY-MM-DD)'
        required: false
        default: ''

concurrency:
  group: etl
  cancel-in-progress: false

jobs:
  run-etl:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Validate PG_DSN secret
        env:
          PG_DSN: ${{ secrets.PG_DSN }}
        run: |
          if [ -z "${PG_DSN}" ]; then
            echo "PG_DSN secret is missing. Add it in GitHub -> Settings -> Secrets and variables -> Actions." >&2
            exit 1
          fi
          python - <<'PY'
            import sys
            import os
            from urllib.parse import urlparse
            pg = os.environ.get('PG_DSN','')
            try:
                u = urlparse(pg)
                host = u.hostname
            except Exception:
                host = None
            if not host:
                print('PG_DSN appears invalid or missing a hostname. Provide a URL-style DSN.', file=sys.stderr)
                sys.exit(1)
            if host in {'localhost', '127.0.0.1', '::1'}:
                print('PG_DSN points to localhost, which is not reachable in GitHub Actions. Use your remote DB host (e.g., Supabase).', file=sys.stderr)
                sys.exit(1)
            print(f"PG_DSN host validated: {host}")
          PY

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r etl/requirements.txt

      - name: Run ETL
        env:
          PG_DSN: ${{ secrets.PG_DSN }}
          ETL_WINDOW_DAYS: ${{ inputs.window_days || '7' }}
          ETL_BACKFILL: ${{ inputs.backfill || 'false' }}
          ETL_BACKFILL_START: ${{ inputs.backfill_start || '' }}
        run: |
          python -m etl.main
